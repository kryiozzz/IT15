@model Opti.Models.AdminDashboardViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard - Opti</title>

    <!-- CSS Files -->
    <link rel="stylesheet" href="~/css/AdminDashboard.css" />
    <link rel="stylesheet" href="~/css/AdminSidebar.css" />
    <link rel="stylesheet" href="~/css/AdminModal.css" />

    <!-- External Libraries -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Set global variables for JavaScript -->
    <script>
        // Machine data
        const operationalMachines = @Model.OperationalMachines;
        const machinesUnderMaintenance = @Model.MachinesUnderMaintenance;
        const offlineMachines = @Model.OfflineMachines;

        // User data
        const userRole = '@ViewContext.HttpContext.User?.FindFirst("Role")?.Value ?? ""';
    </script>

    <!-- Additional styles for dropdowns -->
    <style>
        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-menu {
            display: none;
            position: absolute;
            right: 0;
            background-color: white;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
            border-radius: 4px;
            overflow: hidden;
        }

            .dropdown-menu.show {
                display: block;
            }

        .dropdown-item {
            color: #333;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            .dropdown-item:hover {
                background-color: #f8f9fa;
            }

            .dropdown-item.active {
                background-color: #4f46e5;
                color: white;
            }

        .dropdown-toggle::after {
            display: inline-block;
            margin-left: 0.255em;
            vertical-align: 0.255em;
            content: "";
            border-top: 0.3em solid;
            border-right: 0.3em solid transparent;
            border-bottom: 0;
            border-left: 0.3em solid transparent;
        }

        .filter-badge {
            background-color: #4f46e5;
            color: white;
            border-radius: 9999px;
            padding: 2px 8px;
            font-size: 0.75rem;
            margin-left: 8px;
        }

        tr.hidden-row {
            display: none;
        }
    </style>
</head>

<body>
    <!-- Alert container -->
    <div id="alertContainer"></div>

    <!-- Anti-forgery token for AJAX requests -->
    @Html.AntiForgeryToken()

    <!-- Include Admin Sidebar Partial -->
    <partial name="_AdminSidebar" />

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header - simplified, no actions -->
        <div class="header">
            <h1>Admin Dashboard</h1>
        </div>

        <!-- Stats Section -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-title">
                    <i class="fas fa-dollar-sign" style="color: #3b82f6;"></i>
                    Total Revenue
                </div>
                <div class="stat-value">$@Model.TotalRevenue.ToString("N2")</div>
                <div class="stat-change stat-increase">
                    <i class="fas fa-arrow-up"></i>
                    12% from last month
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-title">
                    <i class="fas fa-users" style="color: #10b981;"></i>
                    New Users
                </div>
                <div class="stat-value">@Model.NewCustomers</div>
                <div class="stat-change stat-increase">
                    <i class="fas fa-arrow-up"></i>
                    @Model.GrowthRate.ToString("0.0")% growth rate
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-title">
                    <i class="fas fa-cogs" style="color: #f59e0b;"></i>
                    Active Machines
                </div>
                <div class="stat-value">@Model.OperationalMachines</div>
                <div class="stat-change @(Model.MachinesUnderMaintenance > 0 ? "stat-decrease" : "stat-increase")">
                    <i class="fas @(Model.MachinesUnderMaintenance > 0 ? "fa-arrow-down" : "fa-arrow-up")"></i>
                    @Model.MachinesUnderMaintenance under maintenance
                </div>
            </div>

            <div class="stat-card">
                <div class="stat-title">
                    <i class="fas fa-clipboard-list" style="color: #6366f1;"></i>
                    Pending Orders
                </div>
                <div class="stat-value">@Model.PendingOrders</div>
                <div class="stat-change stat-increase">
                    <i class="fas fa-spinner"></i>
                    @Model.InProgressOrders in progress
                </div>
            </div>
        </div>
        <!-- Info section replacing charts -->
        <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 1.5rem; margin-bottom: 2rem;">
            <div style="background: white; border-radius: 1rem; padding: 1.5rem; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                    <h3 style="font-size: 1.125rem; font-weight: 600; color: #1e293b; margin: 0;">Sales Overview</h3>
                    <!-- Filter dropdown that works -->
                    <div class="dropdown">
                        <button class="btn-outline btn-sm dropdown-toggle" type="button" id="salesFilterDropdown" onclick="toggleDropdown('salesFilterMenu')">
                            <i class="fas fa-filter"></i>
                            Filter
                        </button>
                        <div class="dropdown-menu" id="salesFilterMenu">
                            <a class="dropdown-item" href="#" onclick="filterSales('all'); return false;">All Time</a>
                            <a class="dropdown-item" href="#" onclick="filterSales('year'); return false;">This Year</a>
                            <a class="dropdown-item" href="#" onclick="filterSales('month'); return false;">This Month</a>
                            <a class="dropdown-item" href="#" onclick="filterSales('week'); return false;">This Week</a>
                        </div>
                    </div>
                </div>
                <div style="padding: 2rem; text-align: center; color: #64748b;">
                    <i class="fas fa-chart-line fa-3x mb-3" style="color: #3b82f6; margin-bottom: 1rem;"></i>
                    <p>Sales chart placeholder.</p>
                </div>
            </div>

            <div style="background: white; border-radius: 1rem; padding: 1.5rem; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                    <h3 style="font-size: 1.125rem; font-weight: 600; color: #1e293b; margin: 0;">User Growth</h3>
                    <!-- Filter dropdown that works -->
                    <div class="dropdown">
                        <button class="btn-outline btn-sm dropdown-toggle" type="button" id="userFilterDropdown" onclick="toggleDropdown('userFilterMenu')">
                            <i class="fas fa-filter"></i>
                            Filter
                        </button>
                        <div class="dropdown-menu" id="userFilterMenu">
                            <a class="dropdown-item" href="#" onclick="filterUsers('all'); return false;">All Time</a>
                            <a class="dropdown-item" href="#" onclick="filterUsers('year'); return false;">This Year</a>
                            <a class="dropdown-item" href="#" onclick="filterUsers('month'); return false;">This Month</a>
                            <a class="dropdown-item" href="#" onclick="filterUsers('week'); return false;">This Week</a>
                        </div>
                    </div>
                </div>
                <div style="padding: 2rem; text-align: center; color: #64748b;">
                    <i class="fas fa-users fa-3x mb-3" style="color: #10b981; margin-bottom: 1rem;"></i>
                    <p>User growth chart placeholder.</p>
                </div>
            </div>
        </div>

        <!-- Machine Overview placeholder -->
        <div style="background: white; border-radius: 1rem; padding: 1.5rem; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); margin-bottom: 2rem;">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                <h3 style="font-size: 1.125rem; font-weight: 600; color: #1e293b; margin: 0;">Machine Status</h3>
                <!-- Filter dropdown that works -->
                <div class="dropdown">
                    <button class="btn-outline btn-sm dropdown-toggle" type="button" id="machineFilterDropdown" onclick="toggleDropdown('machineFilterMenu')">
                        <i class="fas fa-filter"></i>
                        Filter <span class="filter-badge" id="machineFilterBadge">All</span>
                    </button>
                    <div class="dropdown-menu" id="machineFilterMenu">
                        <a class="dropdown-item active" href="#" onclick="filterMachines('all'); return false;">All Types</a>
                        <a class="dropdown-item" href="#" onclick="filterMachines('assembly'); return false;">Assembly</a>
                        <a class="dropdown-item" href="#" onclick="filterMachines('packaging'); return false;">Packaging</a>
                        <a class="dropdown-item" href="#" onclick="filterMachines('qa'); return false;">QA</a>
                    </div>
                </div>
            </div>
            <div style="padding: 2rem; text-align: center; color: #64748b;">
                <i class="fas fa-cogs fa-3x mb-3" style="color: #f59e0b; margin-bottom: 1rem;"></i>
                <p>Machine status chart placeholder.</p>
                <div style="display: flex; justify-content: center; gap: 2rem; margin-top: 1.5rem;">
                    <div class="machine-stat" data-type="all">
                        <span style="font-weight: 700; color: #22c55e;">@Model.OperationalMachines</span> Operational
                    </div>
                    <div class="machine-stat" data-type="all">
                        <span style="font-weight: 700; color: #f59e0b;">@Model.MachinesUnderMaintenance</span> Under Maintenance
                    </div>
                    <div class="machine-stat" data-type="all">
                        <span style="font-weight: 700; color: #ef4444;">@Model.OfflineMachines</span> Offline
                    </div>
                </div>
                <div style="display: flex; justify-content: center; gap: 2rem; margin-top: 1.5rem;">
                    <div class="machine-stat" data-type="assembly" style="display:none;">
                        <span style="font-weight: 700; color: #22c55e;">12</span> Operational
                    </div>
                    <div class="machine-stat" data-type="assembly" style="display:none;">
                        <span style="font-weight: 700; color: #f59e0b;">3</span> Under Maintenance
                    </div>
                    <div class="machine-stat" data-type="assembly" style="display:none;">
                        <span style="font-weight: 700; color: #ef4444;">1</span> Offline
                    </div>
                </div>
                <div style="display: flex; justify-content: center; gap: 2rem; margin-top: 1.5rem;">
                    <div class="machine-stat" data-type="packaging" style="display:none;">
                        <span style="font-weight: 700; color: #22c55e;">8</span> Operational
                    </div>
                    <div class="machine-stat" data-type="packaging" style="display:none;">
                        <span style="font-weight: 700; color: #f59e0b;">2</span> Under Maintenance
                    </div>
                    <div class="machine-stat" data-type="packaging" style="display:none;">
                        <span style="font-weight: 700; color: #ef4444;">2</span> Offline
                    </div>
                </div>
                <div style="display: flex; justify-content: center; gap: 2rem; margin-top: 1.5rem;">
                    <div class="machine-stat" data-type="qa" style="display:none;">
                        <span style="font-weight: 700; color: #22c55e;">4</span> Operational
                    </div>
                    <div class="machine-stat" data-type="qa" style="display:none;">
                        <span style="font-weight: 700; color: #f59e0b;">1</span> Under Maintenance
                    </div>
                    <div class="machine-stat" data-type="qa" style="display:none;">
                        <span style="font-weight: 700; color: #ef4444;">0</span> Offline
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Orders Table -->
        <div class="table-container">
            <div class="table-header">
                <h3 class="table-title">Recent Orders</h3>
                <!-- Functional filter dropdown -->
                <div class="dropdown">
                    <button class="btn-outline btn-sm dropdown-toggle" type="button" id="ordersFilterDropdown" onclick="toggleDropdown('ordersFilterMenu')">
                        <i class="fas fa-filter"></i>
                        Filter <span class="filter-badge" id="ordersFilterBadge">All</span>
                    </button>
                    <div class="dropdown-menu" id="ordersFilterMenu">
                        <a class="dropdown-item active" href="#" onclick="filterOrders('all'); return false;">All Orders</a>
                        <a class="dropdown-item" href="#" onclick="filterOrders('today'); return false;">Today</a>
                        <a class="dropdown-item" href="#" onclick="filterOrders('week'); return false;">This Week</a>
                        <a class="dropdown-item" href="#" onclick="filterOrders('month'); return false;">This Month</a>
                    </div>
                </div>
            </div>
            <table class="data-table" id="ordersTable">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Product</th>
                        <th>Amount</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.RecentOrders != null && Model.RecentOrders.Any())
                    {
                        @* Add some sample dates to make filtering work *@
                        var today = DateTime.Today;
                        var yesterday = today.AddDays(-1);
                        var lastWeek = today.AddDays(-5);
                        var lastMonth = today.AddDays(-20);
                        var twoMonthsAgo = today.AddDays(-50);

                        var i = 0;
                        foreach (var order in Model.RecentOrders)
                        {
                            var date = i == 0 ? today :
                            i == 1 ? yesterday :
                            i == 2 ? lastWeek :
                            i == 3 ? lastMonth : twoMonthsAgo;

                            <tr class="order-row" data-date="@date.ToString("yyyy-MM-dd")">
                                <td>#@order.OrderId</td>
                                <td>@(order.User != null ? order.User.Username : "Unknown")</td>
                                <td>@(order.Product != null ? order.Product.ProductName : "Unknown Product")</td>
                                <td>$@order.TotalAmount.ToString("N2")</td>
                                <td>@date.ToShortDateString()</td>
                            </tr>

                            i++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center py-4">No recent orders found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Machine Type Breakdown -->
        <div class="table-container">
            <div class="table-header">
                <h3 class="table-title">Machine Type Breakdown</h3>
                <!-- Filter dropdown -->
                <div class="dropdown">
                    <button class="btn-outline btn-sm dropdown-toggle" type="button" id="machineTypeFilterDropdown" onclick="toggleDropdown('machineTypeFilterMenu')">
                        <i class="fas fa-filter"></i>
                        Filter <span class="filter-badge" id="machineTypeFilterBadge">All</span>
                    </button>
                    <div class="dropdown-menu" id="machineTypeFilterMenu">
                        <a class="dropdown-item active" href="#" onclick="filterMachineTypes('all'); return false;">All Status</a>
                        <a class="dropdown-item" href="#" onclick="filterMachineTypes('operational'); return false;">Operational Only</a>
                        <a class="dropdown-item" href="#" onclick="filterMachineTypes('maintenance'); return false;">Under Maintenance</a>
                        <a class="dropdown-item" href="#" onclick="filterMachineTypes('offline'); return false;">Offline</a>
                    </div>
                </div>
            </div>
            <table class="data-table" id="machineTypesTable">
                <thead>
                    <tr>
                        <th>Machine Type</th>
                        <th>Total</th>
                        <th>Operational</th>
                        <th>Under Maintenance</th>
                        <th>Offline</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.MachineTypeSummary != null && Model.MachineTypeSummary.Any())
                    {
                        foreach (var machineType in Model.MachineTypeSummary)
                        {
                            <tr class="machine-type-row"
                                data-operational="@machineType.Operational"
                                data-maintenance="@machineType.UnderMaintenance"
                                data-offline="@machineType.Offline">
                                <td>@machineType.MachineType</td>
                                <td>@machineType.Total</td>
                                <td>@machineType.Operational</td>
                                <td>@machineType.UnderMaintenance</td>
                                <td>@machineType.Offline</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center py-4">No machine data available</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- JavaScript for filter functionality -->
    <script>
        // Override problematic function before it runs
        window.addEventListener('DOMContentLoaded', function() {
            // Override checkUserPermissions to prevent redirects
            window.checkUserPermissions = function() {
                console.log("User role:", userRole);
                // Don't redirect, just log
                if (userRole !== 'Admin') {
                    console.log("Non-admin user, but suppressing redirect to prevent refresh loop");
                }
            };

            // Initialize all filters
            filterMachines('all');
            filterOrders('all');
            filterMachineTypes('all');
        });

        // Dropdown functionality
        function toggleDropdown(menuId) {
            document.getElementById(menuId).classList.toggle('show');

            // Close all other dropdowns
            document.querySelectorAll('.dropdown-menu.show').forEach(dropdown => {
                if (dropdown.id !== menuId) {
                    dropdown.classList.remove('show');
                }
            });

            // Stop event propagation
            event.stopPropagation();
        }

        // Close all dropdowns when clicking outside
        window.onclick = function(event) {
            if (!event.target.matches('.dropdown-toggle')) {
                document.querySelectorAll('.dropdown-menu.show').forEach(dropdown => {
                    dropdown.classList.remove('show');
                });
            }
        };

        // Filter functions with actual implementation
        function filterMachines(type) {
            console.log("Filtering machines by:", type);

            // Update filter badge
            document.getElementById('machineFilterBadge').textContent = type === 'all' ? 'All' :
                                                                     type === 'assembly' ? 'Assembly' :
                                                                     type === 'packaging' ? 'Packaging' : 'QA';

            // Update active class
            document.querySelectorAll('#machineFilterMenu .dropdown-item').forEach(item => {
                item.classList.remove('active');
            });
            document.querySelector(`#machineFilterMenu .dropdown-item[onclick*="filterMachines('${type}')"]`).classList.add('active');

            // Hide all machine stats
            document.querySelectorAll('.machine-stat').forEach(stat => {
                stat.style.display = 'none';
            });

            // Show only relevant machine stats
            document.querySelectorAll(`.machine-stat[data-type="${type}"]`).forEach(stat => {
                stat.style.display = 'block';
            });

            // Close dropdown
            toggleDropdown('machineFilterMenu');
        }

        function filterOrders(period) {
            console.log("Filtering orders by:", period);

            // Update filter badge
            document.getElementById('ordersFilterBadge').textContent = period === 'all' ? 'All' :
                                                                     period === 'today' ? 'Today' :
                                                                     period === 'week' ? 'Week' : 'Month';

            // Update active class
            document.querySelectorAll('#ordersFilterMenu .dropdown-item').forEach(item => {
                item.classList.remove('active');
            });
            document.querySelector(`#ordersFilterMenu .dropdown-item[onclick*="filterOrders('${period}')"]`).classList.add('active');

            // Get current date for comparison
            const today = new Date();
            today.setHours(0, 0, 0, 0);

            const oneWeekAgo = new Date(today);
            oneWeekAgo.setDate(today.getDate() - 7);

            const oneMonthAgo = new Date(today);
            oneMonthAgo.setMonth(today.getMonth() - 1);

            // Filter order rows
            document.querySelectorAll('#ordersTable tbody tr').forEach(row => {
                const dateStr = row.getAttribute('data-date');
                if (!dateStr) return;

                const rowDate = new Date(dateStr);

                if (period === 'all') {
                    row.classList.remove('hidden-row');
                } else if (period === 'today') {
                    if (rowDate.toDateString() === today.toDateString()) {
                        row.classList.remove('hidden-row');
                    } else {
                        row.classList.add('hidden-row');
                    }
                } else if (period === 'week') {
                    if (rowDate >= oneWeekAgo) {
                        row.classList.remove('hidden-row');
                    } else {
                        row.classList.add('hidden-row');
                    }
                } else if (period === 'month') {
                    if (rowDate >= oneMonthAgo) {
                        row.classList.remove('hidden-row');
                    } else {
                        row.classList.add('hidden-row');
                    }
                }
            });

            // Check if we need to show "No orders" message
            const visibleRows = document.querySelectorAll('#ordersTable tbody tr:not(.hidden-row)');
            const noOrdersRow = document.querySelector('#ordersTable tbody tr.no-orders-row');

            if (visibleRows.length === 0 && !noOrdersRow) {
                const tbody = document.querySelector('#ordersTable tbody');
                const newRow = document.createElement('tr');
                newRow.className = 'no-orders-row';
                newRow.innerHTML = '<td colspan="5" class="text-center py-4">No orders found for the selected period</td>';
                tbody.appendChild(newRow);
            } else if (visibleRows.length > 0 && noOrdersRow) {
                noOrdersRow.remove();
            }

            // Close dropdown
            toggleDropdown('ordersFilterMenu');
        }

        function filterMachineTypes(status) {
            console.log("Filtering machine types by:", status);

            // Update filter badge
            document.getElementById('machineTypeFilterBadge').textContent = status === 'all' ? 'All' :
                                                                         status === 'operational' ? 'Operational' :
                                                                         status === 'maintenance' ? 'Maintenance' : 'Offline';

            // Update active class
            document.querySelectorAll('#machineTypeFilterMenu .dropdown-item').forEach(item => {
                item.classList.remove('active');
            });
            document.querySelector(`#machineTypeFilterMenu .dropdown-item[onclick*="filterMachineTypes('${status}')"]`).classList.add('active');

            // Filter machine type rows
            document.querySelectorAll('#machineTypesTable tbody tr.machine-type-row').forEach(row => {
                if (status === 'all') {
                    row.classList.remove('hidden-row');
                } else if (status === 'operational') {
                    const operationalCount = parseInt(row.getAttribute('data-operational') || '0');
                    if (operationalCount > 0) {
                        row.classList.remove('hidden-row');
                    } else {
                        row.classList.add('hidden-row');
                    }
                } else if (status === 'maintenance') {
                    const maintenanceCount = parseInt(row.getAttribute('data-maintenance') || '0');
                    if (maintenanceCount > 0) {
                        row.classList.remove('hidden-row');
                    } else {
                        row.classList.add('hidden-row');
                    }
                } else if (status === 'offline') {
                    const offlineCount = parseInt(row.getAttribute('data-offline') || '0');
                    if (offlineCount > 0) {
                        row.classList.remove('hidden-row');
                    } else {
                        row.classList.add('hidden-row');
                    }
                }
            });

            // Check if we need to show "No machines" message
            const visibleRows = document.querySelectorAll('#machineTypesTable tbody tr.machine-type-row:not(.hidden-row)');
            const noMachinesRow = document.querySelector('#machineTypesTable tbody tr.no-machines-row');

            if (visibleRows.length === 0 && !noMachinesRow) {
                const tbody = document.querySelector('#machineTypesTable tbody');
                const newRow = document.createElement('tr');
                newRow.className = 'no-machines-row';
                newRow.innerHTML = '<td colspan="5" class="text-center py-4">No machines found with the selected status</td>';
                tbody.appendChild(newRow);
            } else if (visibleRows.length > 0 && noMachinesRow) {
                noMachinesRow.remove();
            }

            // Close dropdown
            toggleDropdown('machineTypeFilterMenu');
        }
    </script>
</body>
</html>